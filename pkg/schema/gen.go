// +build ignore

package main

import (
	"flag"
	"fmt"
	"html/template"
	"io/ioutil"
	"log"
	"os"
	"time"
)

func main() {
	var (
		file     = flag.String("file", "", "the name of the file with the extension .json")
		variable = flag.String("var", "", "the name of the variable to be generated")
		out      = flag.String("out", "", "the out file")
	)
	flag.Parse()

	if *file == "" || *variable == "" || *out == "" {
		panic("all variables are required")
	}
	fileStr := *file

	// Read the JSON content as bytes.
	jsonBytes, err := ioutil.ReadFile(fileStr)
	if err != nil {
		log.Fatal(err)
	}
	jsonStr := fmt.Sprintf("`%s`", jsonBytes)

	f, err := os.Create(*out)
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	packageTemplate.Execute(f, struct {
		Timestamp  template.HTML
		Variable   string
		JSONSchema template.HTML
	}{
		Timestamp:  template.HTML(time.Now().Format(time.RFC3339)),
		Variable:   *variable,
		JSONSchema: template.HTML(jsonStr),
	})
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by github.com/alextanhongpin/go-openid/schema/gen; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}

package schema 

var {{ .Variable }} = {{ .JSONSchema }}
`))
