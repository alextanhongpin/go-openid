// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package oidc

import (
	"encoding/json"
)

// MarshalJSON marshals as JSON.
func (a AccessTokenRequest) MarshalJSON() ([]byte, error) {
	type AccessTokenRequest struct {
		GrantType   string `json:"grant_type,omitempty"`
		Code        string `json:"code,omitempty"`
		RedirectURI string `json:"redirect_uri,omitempty"`
		ClientID    string `json:"client_id,omitempty"`
	}
	var enc AccessTokenRequest
	enc.GrantType = a.GrantType
	enc.Code = a.Code
	enc.RedirectURI = a.RedirectURI
	enc.ClientID = a.ClientID
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (a *AccessTokenRequest) UnmarshalJSON(input []byte) error {
	type AccessTokenRequest struct {
		GrantType   *string `json:"grant_type,omitempty"`
		Code        *string `json:"code,omitempty"`
		RedirectURI *string `json:"redirect_uri,omitempty"`
		ClientID    *string `json:"client_id,omitempty"`
	}
	var dec AccessTokenRequest
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.GrantType != nil {
		a.GrantType = *dec.GrantType
	}
	if dec.Code != nil {
		a.Code = *dec.Code
	}
	if dec.RedirectURI != nil {
		a.RedirectURI = *dec.RedirectURI
	}
	if dec.ClientID != nil {
		a.ClientID = *dec.ClientID
	}
	return nil
}
