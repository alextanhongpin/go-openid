// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package core

import (
	database "github.com/alextanhongpin/go-openid/internal/database"
	model "github.com/alextanhongpin/go-openid/pkg/model"
	repository "github.com/alextanhongpin/go-openid/pkg/repository"
	wire "github.com/google/go-cloud/wire"
)

// Injectors from wire.go:

func NewService() *serviceImpl {
	codeKV := provideCodeRepository()
	clientKV := provideClientRepository()
	coreModelImpl := provideModel(codeKV, clientKV)
	coreServiceImpl := provideService(coreModelImpl)
	return coreServiceImpl
}

// wire.go:

var serviceSet = wire.NewSet(
	provideClientRepository, wire.Bind(new(repository.Client), new(database.ClientKV)), provideCodeRepository, wire.Bind(new(repository.Code), new(database.CodeKV)), provideModel, wire.Bind(new(model.Core), new(modelImpl)), provideService,
)

func provideClientRepository() *database.ClientKV {
	return database.NewClientKV()
}

func provideCodeRepository() *database.CodeKV {
	return database.NewCodeKV()
}

func provideModel(code repository.Code, client repository.Client) *modelImpl {
	return &modelImpl{code, client}
}

func provideService(model2 model.Core) *serviceImpl {
	return &serviceImpl{model2}
}
