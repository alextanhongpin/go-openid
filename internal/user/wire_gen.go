// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package user

import (
	database "github.com/alextanhongpin/go-openid/internal/database"
	"github.com/alextanhongpin/go-openid/model"
	"github.com/alextanhongpin/go-openid/repository"
	wire "github.com/google/go-cloud/wire"
)

// Injectors from wire.go:

func NewService() *serviceImpl {
	userKV := provideRepository()
	userModelImpl := provideModel(userKV)
	userServiceImpl := provideService(userModelImpl)
	return userServiceImpl
}

// wire.go:

var ServiceSet = wire.NewSet(
	provideRepository, wire.Bind(new(repository.User), new(database.UserKV)), provideModel, wire.Bind(new(model.User), new(modelImpl)), provideService,
)

func provideRepository() *database.UserKV {
	return database.NewUserKV()
}

func provideModel(repo repository.User) *modelImpl {
	return &modelImpl{repository: repo}
}

func provideService(model2 model.User) *serviceImpl {
	decorateValidator := &validatorImpl{model: model2}
	return &serviceImpl{model: decorateValidator}
}
