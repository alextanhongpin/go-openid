// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package client

import (
	database "github.com/alextanhongpin/go-openid/internal/database"
	model "github.com/alextanhongpin/go-openid/model"
	repository "github.com/alextanhongpin/go-openid/repository"
	wire "github.com/google/go-cloud/wire"
)

// Injectors from client.go:

func New() (*Service, error) {
	validator, err := provideValidator()
	if err != nil {
		return nil, err
	}
	client := provideModel(validator)
	repositoryClient := provideRepository()
	service := NewService(client, repositoryClient)
	return service, nil
}

// client.go:

var clientServiceSet = wire.NewSet(
	provideRepository,
	provideValidator,
	provideModel,
	NewService,
)

func provideRepository() repository.Client {
	return database.NewClientKV()
}

func provideModel(validator *Validator) model.Client {
	return NewModel(validator)
}

func provideValidator() (*Validator, error) {
	return NewValidator()
}
